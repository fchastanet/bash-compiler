binFile:
    commands:
        - args:
            - callbacks:
                - argShellcheckFilesCallback
              functionName: argShellcheckFilesFunction
              help: |
                files to validate with shellcheck (if not provided,
                all files from git repository which are beginning
                with a bash shebang, unless --staged option is provided
              helpValueName: argShellcheckFiles
              max: -1
              min: 1
              name: shellcheckFiles
              type: StringArray
              variableName: argShellcheckFiles
          callbacks:
            - shellcheckLintParseCallback
          commandName: shellcheckLint
          functionName: shellcheckLintCommand
          help: |
            Lint bash files using shellcheck.
          helpType: string
          longDescription: |
            shellcheck wrapper that will:
            - install new shellcheck version(${MIN_SHELLCHECK_VERSION}) automatically
            - by default, lint all git files of this project which are beginning with a bash shebang
              except if the option --staged is passed

            ${__HELP_TITLE}Special configuration .shellcheckrc:${__HELP_NORMAL}
            use the following line in your .shellcheckrc file to exclude
            some files from being checked (use grep -E syntax)
            exclude=^bin/bash-tpl$

            ${__HELP_TITLE_COLOR}SHELLCHECK HELP${__RESET_COLOR}

            @@@SHELLCHECK_HELP@@@
          options:
            - alts:
                - --format
                - -f
              authorizedValues:
                - help: ""
                  value: checkstyle
                - help: ""
                  value: diff
                - help: ""
                  value: gcc
                - help: ""
                  value: json
                - help: ""
                  value: json1
                - help: ""
                  value: quiet
                - help: ""
                  value: tty
              defaultValue: tty
              functionName: optionFormatFunction
              help: |
                define output format of this command
              helpValueName: optionFormat
              max: 1
              min: 0
              type: String
              variableName: optionFormat
            - alts:
                - --staged
              functionName: optionStagedFunction
              help: |
                lint only staged git files(files added to file list to be committed)
                and which are beginning with a bash shebang.
              max: 1
              min: 0
              offValue: 0
              onValue: 1
              type: Boolean
              variableName: optionStaged
            - alts:
                - --xargs
              functionName: optionXargsFunction
              help: |
                uses parallelization(using xargs command) only if tty format
              max: 1
              min: 0
              offValue: 0
              onValue: 1
              type: Boolean
              variableName: optionXargs
          unknownOptionCallbacks:
            - unknownOption
          version: "1.0"
