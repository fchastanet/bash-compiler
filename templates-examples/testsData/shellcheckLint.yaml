binFile:
  targetFile: '${FRAMEWORK_ROOT_DIR}/bin/shellcheckLint'
  templateFile: "binFile.gtpl"
  templateName: "binFile"
  srcDirs:
    - "/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/src"
  templateDirs:
    - "templates-examples"
binData:
  commands:
    -
      author: '[Fran√ßois Chastanet](https://github.com/fchastanet)'
      sourceFile: '${REPOSITORY_URL}/tree/master/${SRC_FILE_PATH}'
      license: 'MIT License'
      copyright: copyrightCallback
      optionGroups:
        -
          title: 'GLOBAL OPTIONS:'
          functionName: zzzGroupGlobalOptionsFunction
        -
          title: 'OPTIONS:'
          functionName: shellcheckLintOptionsFunction
      includes:
        default.options.tpl: true
      functionName: shellcheckLintCommand
      commandName: shellcheckLint
      version: '1.0'
      help: 'Lint bash files using shellcheck.'
      longDescription: |
        shellcheck wrapper that will:
        - install new shellcheck version(${MIN_SHELLCHECK_VERSION}) automatically
        - by default, lint all git files of this project which are beginning with a bash shebang
          except if the option --staged is passed

        ${__HELP_TITLE}Special configuration .shellcheckrc:${__HELP_NORMAL}
        use the following line in your .shellcheckrc file to exclude
        some files from being checked (use grep -E syntax)
        exclude=^bin/bash-tpl$

        ${__HELP_TITLE_COLOR}SHELLCHECK HELP${__RESET_COLOR}

        @@@SHELLCHECK_HELP@@@
      callbacks:
        - shellcheckLintParseCallback
      unknownOptionCallbacks:
        - unknownOption
      options:
        -
          variableName: optionHelp
          group: zzzGroupGlobalOptionsFunction
          type: Boolean
          help: 'Display this command help'
          alts:
            - '--help'
            - '-h'
          callback: optionHelpCallback
          functionName: optionHelpFunction
          min: 0
          max: 1
          callbacks: []
          onValue: 1
          offValue: 0
          defaultValue: 0
        -
          variableName: optionFormat
          type: String
          help: 'define output format of this command'
          alts:
            - '--format'
            - '-f'
          group: shellcheckLintOptionsFunction
          defaultValue: tty
          authorizedValues:
            -
              value: checkstyle
              help: checkstyle
            -
              value: diff
              help: diff
            -
              value: gcc
              help: gcc
            -
              value: json
              help: json
            -
              value: json1
              help: json1
            -
              value: quiet
              help: quiet
            -
              value: tty
              help: tty
          functionName: optionFormatFunction
          min: 0
          max: 1
          callbacks: []
          regexp: null
          authorizedValuesList:
            - checkstyle
            - diff
            - gcc
            - json
            - json1
            - quiet
            - tty
          helpValueName: format
        -
          variableName: optionStaged
          functionName: optionStagedFunction
          help: 'lint only staged git files(files added to file list to be committed) and which are beginning with a bash shebang.'
          alts:
            - '--staged'
          type: Boolean
          min: 0
          max: 1
          callbacks: []
          onValue: 1
          offValue: 0
          defaultValue: 0
          group: shellcheckLintOptionsFunction
        -
          variableName: optionXargs
          functionName: optionXargsFunction
          type: Boolean
          help: 'uses parallelization(using xargs command) only if tty format'
          alts:
            - '--xargs'
          min: 0
          max: 1
          callbacks: []
          onValue: 1
          offValue: 0
          defaultValue: 0
          group: shellcheckLintOptionsFunction
      args:
        -
          variableName: argShellcheckFiles
          functionName: argShellcheckFilesFunction
          min: 0
          max: -1
          name: shellcheckFiles
          callbacks:
            - argShellcheckFilesCallback
          help: |
            files to validate with shellcheck. If not provided,
            all files from git repository which are beginning
            with a bash shebang, unless --staged option is provided.
          type: StringArray
          defaultValue: []
          regexp: null
          authorizedValues: null
          authorizedValuesList: null
